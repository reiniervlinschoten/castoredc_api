name: publish

on:
  push:
    branches:
      - "main"
    tags:
      - '**'
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Preparation - Setup Environment
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'

    - name: Preparation - Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine grayskull anaconda-client
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Build and publish to pypi (test)
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload --repository testpypi --verbose dist/*

    - name: Publish to pypi (production)
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload --verbose dist/*

    - name: Setup Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: '3.8'

    - name: Setup Conda build & channels
      run: |
        conda config --add channels conda-forge
        conda install conda-build
        conda install conda-verify
        conda install anaconda-client

    - name: Wait for Pypi update
      run: sleep 600s
      shell: bash

    - name: Build and publish to conda (production)
      env:
        CONDA_TOKEN: ${{ secrets.CONDA_TOKEN }}
      run: |
        grayskull pypi castoredc_api
        conda build castoredc_api
        anaconda -t $CONDA_TOKEN upload /usr/share/miniconda/conda-bld/noarch/castoredc_api*.tar.bz2