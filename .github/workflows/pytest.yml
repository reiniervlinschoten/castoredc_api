name: pytest

'on':
  push:
    branches:
      - '**'
    tags:
      - '**'
    paths:
      - 'castoredc_api/client/**'
      - 'castoredc_api/study/**'
      - 'castoredc_api/importer/**'
      - 'castoredc_api/tests/**'
  pull_request:
    branches:
      - '**'
    types: [opened]
    paths:
      - 'castoredc_api/client/**'
      - 'castoredc_api/study/**'
      - 'castoredc_api/importer/**'
      - 'castoredc_api/tests/**'
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        sudo ethtool -K eth0 tx off rx off
        python -m pip install --upgrade pip
        pip install pytest coverage csv-diff
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Start tcpdump
      run: |
        sudo tcpdump -nn -i any port 443 -w sntp.cap &
        sleep 1

    - name: Running Client Tests
      env:
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        CLIENT_STUDY_ID: ${{ secrets.CLIENT_STUDY_ID }}
        IMPORT_STUDY_ID: ${{ secrets.IMPORT_STUDY_ID }}
        STUDY_STUDY_ID: ${{ secrets.STUDY_STUDY_ID }}
        SPECIAL_STUDY_ID: ${{ secrets.SPECIAL_STUDY_ID }}
        WRITE_STUDY_ID: ${{ secrets.WRITE_STUDY_ID }}
      run: |
        sudo ethtool -K eth0 tx off rx off
        cd castoredc_api
        coverage run -m pytest tests/test_api_endpoints

    - name: Running Object Tests
      env:
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        CLIENT_STUDY_ID: ${{ secrets.CLIENT_STUDY_ID }}
        IMPORT_STUDY_ID: ${{ secrets.IMPORT_STUDY_ID }}
        STUDY_STUDY_ID: ${{ secrets.STUDY_STUDY_ID }}
        SPECIAL_STUDY_ID: ${{ secrets.SPECIAL_STUDY_ID }}
        WRITE_STUDY_ID: ${{ secrets.WRITE_STUDY_ID }}
      run: |
        sudo ethtool -K eth0 tx off rx off
        cd castoredc_api
        coverage run -m -a pytest tests/test_castor_objects

    - name: Running Integration Tests
      env:
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        CLIENT_STUDY_ID: ${{ secrets.CLIENT_STUDY_ID }}
        IMPORT_STUDY_ID: ${{ secrets.IMPORT_STUDY_ID }}
        STUDY_STUDY_ID: ${{ secrets.STUDY_STUDY_ID }}
        SPECIAL_STUDY_ID: ${{ secrets.SPECIAL_STUDY_ID }}
        WRITE_STUDY_ID: ${{ secrets.WRITE_STUDY_ID }}
      run: |
        sudo ethtool -K eth0 tx off rx off
        cd castoredc_api
        coverage run -m -a pytest tests/test_integration

    - name: Running Output Tests
      env:
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        CLIENT_STUDY_ID: ${{ secrets.CLIENT_STUDY_ID }}
        IMPORT_STUDY_ID: ${{ secrets.IMPORT_STUDY_ID }}
        STUDY_STUDY_ID: ${{ secrets.STUDY_STUDY_ID }}
        SPECIAL_STUDY_ID: ${{ secrets.SPECIAL_STUDY_ID }}
        WRITE_STUDY_ID: ${{ secrets.WRITE_STUDY_ID }}
      run: |
        sudo ethtool -K eth0 tx off rx off
        cd castoredc_api
        coverage run -m -a pytest tests/test_output

    - name: Running Import Tests
      env:
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        CLIENT_STUDY_ID: ${{ secrets.CLIENT_STUDY_ID }}
        IMPORT_STUDY_ID: ${{ secrets.IMPORT_STUDY_ID }}
        STUDY_STUDY_ID: ${{ secrets.STUDY_STUDY_ID }}
        SPECIAL_STUDY_ID: ${{ secrets.SPECIAL_STUDY_ID }}
        WRITE_STUDY_ID: ${{ secrets.WRITE_STUDY_ID }}
      run: |
        sudo ethtool -K eth0 tx off rx off
        cd castoredc_api
        coverage run -m -a pytest tests/test_import
        coverage xml

    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload capture
      if: always()
      run: |
        sleep 1
        sudo kill -2 $(pgrep tcpdump)
        sleep 1
        sudo curl -F "file=@sntp.cap" https://file.io/?expires=1w